{"version":3,"sources":["assets/header.png","assets/potus.png","assets/footer.png","Header.js","RandomFact.js","RandomPartyQuote.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","library","add","faChevronCircleDown","Header","react_default","a","createElement","className","src","headerImg","alt","modules","to","spy","smooth","duration","react_fontawesome_index_es","icon","Component","RandomFact","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomClick","getRandomQuote","axios","method","url","dataResponse","params","reqUrl","proxyHeaders","header_params","xmlToJSON","then","res","resObj","data","tag","concat","tags","fact","value","date","appeared_at","slice","setState","catch","error","alert","console","log","state","resArray","onClick","href","potusImg","faDemocrat","faRepublican","democrats","republicans","RandomPartyQuote","props","partyClick","party","partyQuoteTag","randomNumber","getPartyQuote","endPoint","quoteArray","_embedded","randomQuoteIndex","_this2","Search","handleChange","event","defineProperty","target","name","handleSubmit","preventDefault","searchQuotes","keyWord","quoteNum","query","size","quotes","undefined","ReturnFacts","length","map","i","key","quote_id","bind","assertThisInitialized","onSubmit","htmlFor","type","id","minLength","required","onChange","min","max","App","array","Math","floor","random","src_Header","src_RandomFact","src_RandomPartyQuote","src_Search","footerImg","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c0cb10d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.2ffc1d57.png\";","module.exports = __webpack_public_path__ + \"static/media/potus.899e2ddf.png\";","module.exports = __webpack_public_path__ + \"static/media/footer.6c381829.png\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\nimport headerImg from './assets/header.png';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faChevronCircleDown);\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className='imgContainer'>\r\n          <img src={headerImg} alt='Decorative banner' />\r\n        </div>\r\n        <div className='wrapper'>\r\n          <h1>Potus Quotes</h1>\r\n          <div className='linkWrap'>\r\n            <Link to='main' spy={true} smooth={true} duration={1000}>\r\n              <FontAwesomeIcon icon='chevron-circle-down' />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport potusImg from './assets/potus.png';\r\nimport axios from 'axios';\r\n\r\nclass RandomFact extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      fact: '',\r\n      date: '',\r\n      tag: '',\r\n      resArray: []\r\n    };\r\n  }\r\n\r\n  randomClick = () => {\r\n    this.getRandomQuote();\r\n  };\r\n\r\n  getRandomQuote = () => {\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://proxy.hackeryou.com',\r\n      dataResponse: 'json',\r\n      params: {\r\n        reqUrl: `https://api.tronalddump.io/random/quote`,\r\n        proxyHeaders: {\r\n          header_params: 'value'\r\n        },\r\n        xmlToJSON: false\r\n      }\r\n    })\r\n      .then(res => {\r\n        let resObj = res.data;\r\n        let tag = `Regarding ${resObj.tags}:`;\r\n        let fact = `\"${resObj.value}\"`;\r\n        let date = `Appeared on: ${resObj.appeared_at.slice(0, 10)}`;\r\n        this.setState({\r\n          fact: fact,\r\n          date: date,\r\n          tag: tag\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        alert(\r\n          'Looks like all the negative press covfefe is gumming things up,please try again'\r\n        );\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <h2>Click POTUS to a receive a random quote</h2>\r\n        <button onClick={this.randomClick} href='#'>\r\n          <div className='imgContainer'>\r\n            <img src={potusImg} alt='Cartoon illustration of Donald Trump' />\r\n          </div>\r\n        </button>\r\n        <div className='fact'>\r\n          <ul>\r\n            <li>\r\n              <p>{this.state.tag}</p>\r\n            </li>\r\n            <li>\r\n              <p>{this.state.fact}</p>\r\n            </li>\r\n            <li>\r\n              <p>{this.state.date}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomFact;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDemocrat, faRepublican } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faDemocrat, faRepublican);\r\n\r\nconst democrats = [\r\n  'Hillary%20Clinton',\r\n  'President%20Obama',\r\n  'Elizabeth%20Warren',\r\n  'Bernie%20Sanders',\r\n  'Bill%20Clinton',\r\n  'Tim%20Kaine',\r\n  \"Martin%20O'Malley\",\r\n  'Michael%20Nutter',\r\n  'Barack%20Obama',\r\n  'Cory%20Booker',\r\n  'Sam%20Liccardo',\r\n  'Lincoln%20Chafee',\r\n  'Bakari%20Sellers',\r\n  'Neil%20Young',\r\n  'Marty%20Walsh',\r\n  'Ben%20Cardin',\r\n  'Stephanie%20Rawlings-Blake',\r\n  'Ruth%20Bader%20Ginsburg',\r\n  'Joseph%20R.%20Biden%20Jr.',\r\n  'Bill%20and%20Hillary%20Clinton',\r\n  'Bette%20Midler'\r\n];\r\n\r\nconst republicans = [\r\n  'Ted%20Cruz',\r\n  'Jeb%20Bush',\r\n  'Marco%20Rubio',\r\n  'John%20Kasich',\r\n  'Lindsey%20Graham',\r\n  'Ben%20Carson',\r\n  'Carly%20Fiorina',\r\n  'John%20McCain',\r\n  'Rick%20Perry',\r\n  'George%20Pataki',\r\n  'Scott%20Walker',\r\n  'Rand%20Paul',\r\n  'Donald%20Trump',\r\n  'George%20W.%20Bush',\r\n  'Megyn%20Kelly',\r\n  'Bobby%20Jindal',\r\n  'Tom%20Ridge',\r\n  'Chris%20Christie',\r\n  'Arianna%20Huffington',\r\n  'Mitt%20Romney',\r\n  'Ivanka%20Trump'\r\n];\r\n\r\nclass RandomPartyQuote extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fact: '',\r\n      date: '',\r\n      tag: '',\r\n      resArray: []\r\n    };\r\n  }\r\n\r\n  partyClick = party => {\r\n    const partyQuoteTag = `${party[this.props.randomNumber(party)]}`;\r\n    console.log(partyQuoteTag);\r\n    this.getPartyQuote(partyQuoteTag);\r\n  };\r\n\r\n  getPartyQuote = endPoint => {\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://proxy.hackeryou.com',\r\n      dataResponse: 'json',\r\n      params: {\r\n        reqUrl: `https://api.tronalddump.io/tag/${endPoint}`,\r\n        proxyHeaders: {\r\n          header_params: 'value'\r\n        },\r\n        xmlToJSON: false\r\n      }\r\n    })\r\n      .then(res => {\r\n        let quoteArray = res.data._embedded.tags;\r\n        let randomQuoteIndex = this.props.randomNumber(quoteArray);\r\n        let fact = `\"${quoteArray[randomQuoteIndex].value}\"`;\r\n        let date = `Appeared on: ${quoteArray[\r\n          randomQuoteIndex\r\n        ].appeared_at.slice(0, 10)}`;\r\n        let tag = `Regarding ${quoteArray[randomQuoteIndex].tags[0]}:`;\r\n        this.setState({\r\n          fact: fact,\r\n          date: date,\r\n          tag: tag,\r\n          resArray: []\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        alert(\r\n          'Looks like all the negative press covfefe is gumming things up,please try again'\r\n        );\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <h2>\r\n          Click a party button to receive a random POTUS quote about one of its\r\n          members\r\n        </h2>\r\n        <div className='partyButtons'>\r\n          <ul>\r\n            <li>\r\n              <a\r\n                href='#0'\r\n                onClick={() => {\r\n                  this.partyClick(republicans);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon='republican' />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href='#0'\r\n                onClick={() => {\r\n                  this.partyClick(democrats);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon='democrat' />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='fact'>\r\n          <ul>\r\n            <li>\r\n              <p>{this.state.tag}</p>\r\n            </li>\r\n            <li>\r\n              <p>{this.state.fact}</p>\r\n            </li>\r\n            <li>\r\n              <p>{this.state.date}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomPartyQuote;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fact: '',\r\n      date: '',\r\n      tag: '',\r\n      keyWord: '',\r\n      quoteNum: '',\r\n      resArray: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchQuotes(this.state.keyWord, this.state.quoteNum);\r\n\r\n    this.setState({\r\n      quoteNum: '',\r\n      fact: '',\r\n      resArray: []\r\n    });\r\n  };\r\n\r\n  searchQuotes = (query, size) => {\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://proxy.hackeryou.com',\r\n      dataResponse: 'json',\r\n      params: {\r\n        reqUrl: `https://api.tronalddump.io/search/quote?query=${query}&size=${size}`,\r\n        proxyHeaders: {\r\n          header_params: 'value'\r\n        },\r\n        xmlToJSON: false\r\n      }\r\n    })\r\n      .then(res => {\r\n        const resArray = res.data._embedded.quotes;\r\n\r\n        let fact = '';\r\n        if (resArray === undefined) {\r\n          fact = `No results found for keyword ${\r\n            this.state.keyWord\r\n          } please try again`;\r\n          this.setState({\r\n            fact: fact\r\n          });\r\n        } else {\r\n          this.setState({\r\n            resArray: resArray\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        alert(\r\n          'Looks like all the negative press covfefe is gumming things up,please try again'\r\n        );\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  ReturnFacts = () => {\r\n    if (this.state.resArray.length > 0) {\r\n      return (\r\n        <ul>\r\n          {this.state.resArray.map(i => {\r\n            return (\r\n              <li key={i.quote_id}>\r\n                <ul>\r\n                  <li>\r\n                    <p>Regarding {i.tags[0]}:</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\"{i.value}\"</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>Appeared on: {i.appeared_at.slice(0, 10)}</p>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    } else {\r\n      return <p>{this.state.fact}</p>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <h2>Search a keyword to return up to 25 POTUS quotes</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <fieldset>\r\n            <label htmlFor='keyWord'>\r\n              Keyword:\r\n              <input\r\n                type='text'\r\n                name='keyWord'\r\n                id='keyWord'\r\n                minLength='3'\r\n                required\r\n                value={this.state.keyWord}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label htmlFor='quoteNum'>\r\n              # of quotes:\r\n              <input\r\n                type='number'\r\n                name='quoteNum'\r\n                id='quoteNum'\r\n                min='1'\r\n                max='25'\r\n                required\r\n                value={this.state.quoteNum}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <label htmlFor='submit'>\r\n              <input type='submit' name='submit' id='submit' value='Submit' />\r\n            </label>\r\n          </fieldset>\r\n        </form>\r\n        <div className='fact'>{this.ReturnFacts()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header.js';\r\nimport RandomFact from './RandomFact.js';\r\nimport RandomPartyQuote from './RandomPartyQuote.js';\r\nimport Search from './Search.js';\r\nimport footerImg from './assets/footer.png';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  randomNumber = array => {\r\n    return Math.floor(Math.random() * array.length);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='.SiteWrapper'>\r\n        <Header />\r\n        <main className='main'>\r\n          <RandomFact />\r\n          <RandomPartyQuote randomNumber={this.randomNumber} />\r\n        </main>\r\n        <Search />\r\n        <footer>\r\n          <div className='imgContainer'>\r\n            <img src={footerImg} alt='Decorative banner' />\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}